resources:

  - name: utility_scriptRepo
    type: GitRepo
    configuration:
      path: jpline/sample-script
      branches:
        include: master
      gitProvider: varsha_github
      
  - name: utility_testRepo
    type: GitRepo
    configuration:
      path: jpline/sample-script
      branches:
        include: test
      gitProvider: varsha_github
      
  - name: imageDocker_1
    type: Image
    configuration:
      registry: varsha_docker
      imageName: shippabledocker/sample-node
      imageTag: latest
  
  - name: imagePrivate
    type: Image
    imageName: 
    configuration:
      registry: varsha_docker
      imageName: shippabledocker/sample_node_pvt
      imageTag: masterpyt 
      
  - name: imagePython_2
    type: Image
    configuration:
      registry: varsha_docker
      imageName: shippabledocker/u16phpall
      imageTag: test7.1
  
  - name: webhookInt
    type: Webhook
    configuration:
      webhookName: varsha_internalWebhook
      payload: "sample_one_update"
      
  - name: webhookIntExternal
    type: Webhook
    configuration:
      webhookName: varsha_externalWebhook
      payload: "data=test_update"
      
  - name: cron_trigger
    type: CronTrigger
    configuration: 
      interval: "*/2 * * * *"
      
pipelines:
  - name: Varsha_pipeline
    steps: 
    
      - name: utility_u18test
        type: Bash
        configuration:
          timeoutSeconds: 360
          nodePool: node-RHEL-7
          inputSteps:
            - name: utility_u16
          inputResources:
            - name: utility_scriptRepo
        execution:
          onExecute:
            - printenv
            - pwd

            - pushd $res_utility_scriptRepo_resourcePath
            - pwd
            - ls

            - popd 
            
      - name: utility_u16
        type: Bash
        configuration:
          timeoutSeconds: 360
          affinityGroup: u16grp
          nodePool: ubuntu16
          inputResources:
              - name: utility_scriptRepo
              - name: imagePrivate
          inputSteps:
              - name: utility_u18test
          integrations:
              - name: varsha_slack
              - name: varshaJira
              - name: varsha_internalWebhook
          outputResources:
              - name: webhookInt
              - name: utility_testRepo
          environmentVariables:
            ENV1: value1
            ENV2: value2
        execution:
          onExecute:
            - printenv
            - docker images
            - test "$ENV1" == "value1"
            - test "$ENV2" == "value2"

            - echo "-------------------------------------------- IMAGE RESOURCE -------------------------------------------------"
            - add_run_variables imageTag="firstTest"

            #- pushd $res_imagePython_2_resourcePath
            - cd $res_imagePython_2_resourcePath
            - add_pipeline_variables imageName="shippabledocker/ship_plv2pyt" imageTag="tip"
            - cd 
           # - popd
            - echo "------------------------------------------- DONE WITH IMAGE RESOURCE -----------------------------------------"

            - echo "-------------------------------------------- GITREPO RESOURCE ----------------------------------------------"
            - pushd $res_utility_scriptRepo_resourcePath
            - source example.env
            - echo $TEST
            - ls -la
            #########   REMOVED   ########- save_run_state test.sh my_file

            - read_json packages.json "name"

            - openssl genrsa -out key.pem 1024 
            - openssl rsa -in key.pem -text -noout
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 

            - encrypt_string "secretValue" --key pub.pem
            - encrypted=$(encrypt_string "secretValue" --key pub.pem)
            - echo "$encrypted"
            - decrypt_string "$encrypted" --key key.pem

            - encrypt_file --output encrypted.txt crypt.txt --key pub.pem
            - cat encrypted.txt
            - decrypt_file encrypted.txt --output decrypted.txt --key key.pem
            - cat decrypted.txt

            - echo "$STEP_URL"
            - echo "$SAMPLE"
            - echo "$TEST"
            - echo "$res_utility_scriptRepo_isPrerelease"

            - replace_envs example.json sample.json
            - echo "$STEP_URL"
            - echo "$TEST"
            - echo "$BRANCH"
            - echo "$res_utility_scriptRepo_isPrerelease"
            - echo "$SAMPLE"
            
            - add_pipeline_files cachefile.txt u16_pipeline_files
            - add_cache_files echo.sh my_cache
           # - restore_cache_files my_file echo.sh
            - popd
            
            - echo "------------------------------------------ DONE WITH GITREPO RESOURCE --------------------------------------------------------------------------------"

            - bump_semver v1.0.1 major
            - bump_semver v0.0.1 patch

            - compare_git --resource utility_scriptRepo --commit-range HEAD~3..HEAD test.sh

            - update_commit_status utility_scriptRepo --status failure --message "updated in utility step" --context jfrog_pipelines

            - switch_env nodejs 8.16.0

            - write_output webhookInt "payload=updating_outputResource_from_step_for_Internalwebhook_1"

            - write_output utility_testRepo "branches=testing123"
            - send_notification varsha_slack
           # - send_notification varshaJira --project-id TES --type Bug --description "test api step_id=$STEP_ID" --summary "no issue" 

            - execute_command echo $res_utility_scriptRepo_resourcePath
          #  - retry_command "git clone git@bitbucket.org:shiptest-rc-me/testprivate.git" #worked
            #- replicate_resource imageDocker_1 imagePython_2 #throws error

            - printenv
            - docker images

            #- retry_command grunt install
           # - mkdir -p shippable/testresults && mkdir -p shippable/codecoverage
           # - ./node_modules/.bin/istanbul cover grunt -- -u tdd
           # - ./node_modules/.bin/istanbul report cobertura --dir shippable/codecoverage/
           # - save_tests $res_utility_scriptRepo_resourcePath/shippable/testresults/testresults.xml
          onComplete:
            - echo "Oh Yeah Done ubuntu 16!"

      - name: dep_u16
        type: Bash
        configuration:
          affinityGroup: u16grp
          nodePool: ubuntu16
          inputSteps:
              - name: utility_u16
          integrations:
              - name: varsha_slack
              - name: varshaJira
        execution:
          onExecute:
           # - pushd $res_utility_scriptRepo_resourcePath

            #########   REMOVED   ######## #- restore_run_state my_file test.sh

            - restore_cache_files my_cache echo.sh

           # - popd

            - send_notification varsha_slack

          onComplete:
            - echo "Oh Yeah Done affinity group"
          
#       - name: utility_c7
#         type: Bash
#         configuration:
#           timeoutSeconds: 360
#           #nodePool: kermit_centos_pool
#           inputResources:
#             - name: utility_scriptRepo
#             - name: webhookInt
#           integrations:
#             - name: varsha_slack
#         execution:
#           onExecute:
#             - printenv
#           #  - docker pull drydock/c7node:master
#            # - docker rm $(docker stop $(docker ps -a -q --filter ancestor=shashiavtc/webapp:req-res --format="{{.ID}}"))
#            # - docker run -p 49160:8080 -d shashiavtc/webapp:req-res
#            # - curl -i http://localhost:49160/?data=hi
#             - add_run_variables imageTag="firstTest"

#             - pushd $res_utility_scriptRepo_resourcePath

#             - save_run_state test.sh my_file
#             - restore_run_state my_file test.sh

#             - popd

#             - bump_semver v1.0.1 major
#             - bump_semver v0.0.1 patch

#             - compare_git --resource utility_scriptRepo --commit-range HEAD~3..HEAD test.sh

#             - update_commit_status utility_scriptRepo --status processing --message "updated in utility step" --context $STEP_NAME

#             - switch_env nodejs 8.16.0

#             - pushd $res_utility_scriptRepo_resourcePath

#             - read_json packages.json "name"
#             - openssl genrsa -out key.pem 1024 
#             - openssl rsa -in key.pem -text -noout
#             - openssl rsa -in key.pem -pubout -out pub.pem 
#             - openssl rsa -in pub.pem -pubin -text -noout 

#             - encrypt_string "secretValue" --key pub.pem
#             - encrypted=$(encrypt_string "secretValue" --key pub.pem)
#             - echo "$encrypted"
#             - decrypt_string "$encrypted" --key key.pem

#             - encrypt_file --output encrypted.txt crypt.txt --key pub.pem
#             - cat encrypted.txt
#             - decrypt_file encrypted.txt --output decrypted.txt --key key.pem
#             - cat decrypted.txt
#             - replace_envs example.env sample.env

#             - cat sample.env
#             - cat example.env

#             - cache_files echo.sh my_file
#             - restore_cache my_file echo.sh

#             - popd
#             - send_notification varsha_slack

#             - execute_command echo $res_utility_scriptRepo_resourcePath
#           onComplete:
#             - echo "Oh Yeah Done centOS 7!!"
      
      - name: utility_u18
        type: Bash
        configuration:
          timeoutSeconds: 360
          integrations:
            - name: varsha_slack
            - name: varsha_externalWebhook
            - name: varsha_internalWebhook
          inputSteps:
            - name: utility_u16
          inputResources:
            - name: utility_scriptRepo
          outputResources:
            - name: webhookIntExternal
        execution:
          onExecute:
            - printenv
            - docker pull drydock/u16node:master
            - add_run_variables imageTag="firstTest"

            - pushd $res_utility_scriptRepo_resourcePath

            - save_run_state test.sh my_file
            - restore_run_state my_file test.sh

            - popd

            - bump_semver v1.0.1 major
            - bump_semver v0.0.1 patch

            - compare_git --resource utility_scriptRepo --commit-range HEAD~3..HEAD test.sh

            - update_commit_status utility_scriptRepo --status processing --message "updated in utility step" --context $STEP_NAME

            - switch_env nodejs 8.16.0

            - pushd $res_utility_scriptRepo_resourcePath

            - read_json packages.json "name"

            - openssl genrsa -out key.pem 1024 
            - openssl rsa -in key.pem -text -noout
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 

            - encrypt_string "secretValue" --key pub.pem
            - encrypted=$(encrypt_string "secretValue" --key pub.pem)
            - echo "$encrypted"
            - decrypt_string "$encrypted" --key key.pem

            - encrypt_file --output encrypted.txt crypt.txt --key pub.pem
            - cat encrypted.txt
            - decrypt_file encrypted.txt --output decrypted.txt --key key.pem
            - cat decrypted.txt

            - replace_envs example.env sample.env

            - cat sample.env
            - cat example.env

            - cache_files echo.sh my_file
            - restore_cache my_file echo.sh

            - popd

            - write_output webhookIntExternal "payload=updating_from_step_again_1"

            - send_notification notifySlack

            - execute_command echo $res_utility_scriptRepo_resourcePath
          onComplete:
            - echo "Oh Yeah Done ubuntu 18!"
          
      
        
        
