resources:

  - name: utility_scriptRepo
    type: GitRepo
    configuration:
      path: jpline/sample-script
      branches:
        include: master
      gitProvider: varsha_github
  
  - name: r_Image
    type: Image
    configuration:
       registry: varsha_docker
#        imageName: shippabledocker/sample_python
       imageTag: latest
#        autoPull: <boolean> (default false)
       
  - name: r_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_artifactory
      buildName: mvn_sample_build_varsha
      buildNumber: 1
   
  - name: r_Aql
    type: Aql
    configuration:
      sourceArtifactory: varsha_artifactory
      query: items.find({"@mvn_sample_build_varsha":{"$eq":"artifactory"}}) #items.find({"@build.name":{"$eq":"artifactory"}})
      addedProperties:
        key1: value1
        key2: value2
#       mappings:
#         - name: mapping1
#           input: testInput  
#           output: testInput
  
  - name: r_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: bindu_dist
      name: test_varsha_updated
      version: version1
      
pipelines:
  - name: Varsha_pipeline
    steps: 
      - name: utility_u16
        type: Bash
        configuration:
          inputResources:
            - name: r_BuildInfo
            - name: r_Aql
            - name: r_Image
#               - name: utility_scriptRepo
#               - name: imagePrivate
#           inputSteps:
#               - name: utility_u18test
#           integrations:
#               - name: varsha_slack
#           outputResources:
#               - name: webhookInt
          environmentVariables:
            ENV1: 1Bash
            ENV2: 2Bash
        execution:
          onStart:
            - printenv
          onExecute:
            - printenv
      
      - name: s_CreateReleaseBundle
        type: CreateReleaseBundle
        configuration:
          #inherits from bash
          releaseBundleName: test_varsha
          releaseBundleVersion: version1
          inputResources:
            - name: r_Aql
          outputResources:
            - name: r_ReleaseBundle
        execution:
          onStart:
            - printenv
