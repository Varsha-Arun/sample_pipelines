resources:

   - name: S_Bash_0397_FileSpectest
     type: FileSpec
     configuration:
       sourceArtifactory: varsha_art
       aql: items.find({"repo":{"example-repo-local"}}) # required, either this or pattern
     # props: "key=value"
     # recursive: false
     # flat: true
     # excludePatterns: "*.sha1"
     # archiveEntries: "artifactory"
     # buildName: test
     # buildNumber: 10
     # sortBy: size
     # sortOrder: desc
     # limit: 1
     # offset: 3
     
   - name: S_Bash_0133_FileSpectest
     type: FileSpec
     configuration:
       sourceArtifactory: varsha_art
       pattern: example-repo-local/setup/auto.txt # required, either this or aql
       #aql: items.find({"repo": "example-repo-local/"}) # required, either this or pattern
      # props: "key=value"
       recursive: false
       #flat: true
       #excludePatterns: "*.sha1"
       #archiveEntries: "artifactory"
      # buildName: test
     #  buildNumber: 10
       #sortBy: size
       #sortOrder: desc
       #limit: 1
      # offset: 3


   - name: S_Bash_0433_FileSpectest
     type: FileSpec
     configuration:
       sourceArtifactory: varsha_art
       pattern: "example-repo-local/setup/" # required, either this or aql
     #  target: "54676"
      
   - name: utility_scriptRepo
     type: GitRepo
     configuration:
       path: Varsha-Arun/sample-script
       branches:
         include: master
       gitProvider: varsha_github
       shallowDepth: 4

   - name: test_GitRepo
     type: GitRepo
     configuration:
       gitProvider: varsha_bbs
       path: ~varshaa/sample_tests
       branches:
         include: master
         
   
         
   - name: r_OutgoingWebhook
     type: OutgoingWebhook
     configuration:
       webhookName: varsha_outgoingtest
       method: POST #<GET|PUT|POST|DELETE|PATCH> #default POST
      # Parameters: <query string to be added>
       path: “/v1/projectIntegrations/482/hook”
      # headers:
      #   Content-type:<valid request content types> 
      #   accept: xyc
  
   - name: r_IncomingWebhook
     type: IncomingWebhook
     configuration:
       webhookName: varsha_incomingwebhookbasic
       
#   - name: s_aql
#     type: Aql
#     configuration:
#       sourceArtifactory: varsha_artifactory
#       query: items.find({"@build.name":{"$eq":"artifactory"}})
#       addedProperties:
#         key1: value1
#         key2: value2
#       mappings:
#         - name: mapping1
#           input: IN
#           output: test
  
#   - name: s_fileSpec
#     type: FileSpec
#     configuration:     
#       sourceArtifactory: varsha_artifactory
      
#   - name: s_buildInfo
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: varsha_artifactory
#       buildName: test
#       buildNumber: 1
   
#   - name: s_release_bundle
#     type: ReleaseBundle
#     configuration:
#       sourceDistribution: varsha_dist
#       name: signed_release_bundle_gradle
#       version: v3.0.0
#       isSigned: true
  
#   - name: s_distribution_rule
#     type: DistributionRule
#     configuration:
#       sourceDistribution: varsha_dist
#       cityName: '*'
#       serviceName: '*'
#       siteName: '*'
#       countryCodes:
#         - IN
  
#   - name: s_image
#     type: Image
#     configuration:
#       registry: varsha_docker
# #       sourceRepository:    <name of the artifactory repo>   # required if registry is Artifactory
#       imageName: shippabledocker/sample_python
#       imageTag: latest
# #       autoPull: true
  
#   - name: s_kubeCluster
#     type: KubeCluster
#     configuration:
#       kubernetesConfig: varsha_kube
#       bastionHostIP: 3.3.3.3
#       bastionUser:  test
#       bastionIntegrationName: varsha_sshkey
  
#   - name: s_remoteFile
#     type: RemoteFile
#     configuration:     
#       source: varsha_aws
  
#   - name: s_vmCluster
#     type: VmCluster
#     configuration:
#       sshKey: varsha_sshkey
#       targets:
#         - 9.9.9.9
  
 # - name: r_internalWebhook
 #   type: InternalWebhook
 #   configuration:
 #     webhookName: internal_webhook
      
 # - name: varsha_bbRepo
  #  type: GitRepo
  #  configuration:
  #    gitProvider: varsha_bb
  #    path: shiptest-rc-me/jfrog-pipelines
      
#   - name: cron_trigger
#     type: CronTrigger
#     configuration: 
#       interval: "1 10 4 9 *"
      
      
pipelines:

  - name: varsha_simpleBash1
  
            
    steps:
    
      - name: S_Bash_0397test
        type: Bash
        configuration:
          inputResources:
            - name: S_Bash_0397_FileSpectest
          inputSteps:
            - name: allIntegrationsInput3
        execution:
          onExecute:
            - echo "executing step..."
            
      - name: S_Bash_0433test
        type: Bash
        configuration:
          inputResources:
            - name: S_Bash_0433_FileSpectest
          inputSteps:
            - name: allIntegrationsInput3
        execution:
          onExecute:
            - echo "executing step..."
            
      - name: S_Bash_0133test
        type: Bash
        configuration:
          inputResources:
            - name: S_Bash_0133_FileSpectest
          inputSteps:
            - name: allIntegrationsInput3
        execution:
          onExecute:
            - echo "executing step..."
            
      - name: allIntegrationsInput
        type: Bash
        configuration:
          inputResources:
            - name: utility_scriptRepo
            - name: test_GitRepo
#           integrations:
#             - name: varsha_airbrake
#             - name: varsha_artifactory
#             - name: varsha_aws
#             - name: varsha_azureKeys
#             - name: varsha_bbs
#             - name: varsha_bitbucket
#             - name: varsha_dist
#             - name: varsha_do
#             - name: varsha_docker
#             - name: varsha_fileServer
        execution:
          onExecute:
            - printenv
          #  - |
           #   [ ! -z "$int_varsha_fileServer_name" ]
           
            
      - name: allIntegrationsInput1
        type: Bash
        configuration:
#           integrations:
#             - name: varsha_airbrake
#             - name: varsha_artifactory
#             - name: varsha_aws
#             - name: varsha_azureKeys
#             - name: varsha_bbs
#             - name: varsha_bitbucket
#             - name: varsha_dist
#             - name: varsha_do
#             - name: varsha_docker
#             - name: varsha_fileServer
          inputSteps:
            - name: allIntegrationsInput
        execution:
          onExecute:
            - printenv

      - name: allIntegrationsInput2
        type: Bash
        configuration:
          inputResources:
            - name: r_IncomingWebhook
#           integrations:
#             - name: varsha_airbrake
#             - name: varsha_artifactory
#             - name: varsha_aws
#             - name: varsha_azureKeys
#             - name: varsha_bbs
#             - name: varsha_bitbucket
#             - name: varsha_dist
#             - name: varsha_do
#             - name: varsha_docker
#             - name: varsha_fileServer
          inputSteps:
            - name: allIntegrationsInput
        execution:
          onExecute:
            - printenv

      - name: allIntegrationsInput3
        type: Bash
        configuration:
#           integrations:
#             - name: varsha_airbrake
#             - name: varsha_artifactory
#             - name: varsha_aws
#             - name: varsha_azureKeys
#             - name: varsha_bbs
#             - name: varsha_bitbucket
#             - name: varsha_dist
#             - name: varsha_do
#             - name: varsha_docker
#             - name: varsha_fileServer
          inputSteps:
            - name: allIntegrationsInput
          outputResources:
            - name: r_OutgoingWebhook
        execution:
          onExecute:
            - printenv
            - set_payload r_OutgoingWebhook "{\"test\":\"payload123\"}"
            
     # - name: u18BashStep1
     #   type: Bash
      #  configuration:
#           nodePool: ubuntu16_node
#           integrations:
#             - name: varsha_aws
#           inputResources:
#             - name: cron_trigger
        #  outputResources:
#             - name: utility_scriptRepo
#             - name: s_aql
#             - name: s_fileSpec
#             - name: s_buildInfo
#             - name: s_release_bundle
#             - name: s_distribution_rule
#             - name: s_image
#             - name: s_kubeCluster
#             - name: s_remoteFile
#             - name: s_vmCluster
       #     - name: r_internalWebhook
       # execution:
       #   onExecute:
        #    - printenv
 #
#       - name: utility_scriptRepoStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           timeoutSeconds: 360
# #           integrations:
# #             - name: varsha_aws
# #           inputSteps:
# #             - name: u18BashStep1
#           inputResources:
#             - name: utility_scriptRepo
#         execution:
#           onExecute:
#             - printenv

#       - name: s_aqlStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_aql
#         execution:
#           onExecute:
#             - printenv
            
#       - name: s_fileSpecStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_fileSpec
#         execution:
#           onExecute:
#             - printenv
            
#       - name: s_buildInfoStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_buildInfo
#         execution:
#           onExecute:
#             - printenv
                 
#       - name: s_release_bundleStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_release_bundle
#         execution:
#           onExecute:
#             - printenv
            
#       - name: s_distribution_ruleStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_distribution_rule
#         execution:
#           onExecute:
#             - printenv
            
#       - name: s_imageStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_image
#         execution:
#           onExecute:
#             - printenv
               
#       - name: s_kubeClusterStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_kubeCluster
#         execution:
#           onExecute:
#             - printenv   
                    
#       - name: s_remoteFileStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_remoteFile
#         execution:
#           onExecute:
#             - printenv 
                     
#       - name: s_vmClusterStep
#         type: Bash
#         configuration:
#           nodePool: ubuntu16_node
#           inputResources:
#             - name: s_vmCluster
#         execution:
#           onExecute:
#             - printenv 
                        
#       - name: s_webhookStep
#         type: Bash
#         configuration:
# #           nodePool: ubuntu16_node
#           inputResources:
#             - name: r_internalWebhook
#         execution:
#           onExecute:
#             - printenv 
