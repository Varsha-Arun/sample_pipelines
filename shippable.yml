resources:
  - name: sample_scriptrepo
    type: gitRepo
    repoPath: Varsha-Arun/sample-script
    configuration:
      integrationName: github
      branches:
        only: master
      tags:
        except: none
        only: none   
      buildOnCommit: true
      buildOnPullRequest: true
      buildOnPullRequestClose: true
      buildOnRelease: true
      buildOnTagPush: true
      buildOnFileCommit: "*test"
      shallowDepth: 2
      gitConfig: 
        - dont_know
        - dont_know_2
    initialVersion:
      sha: master
  
pipelines:
  - name: pipeline_1
    setup:
      environmentVariables:
        normal:
          - ENV1: value-pipe-1
          - ENV2: value-pipe-2
        encrypted:
          - SECURE_ENV1: test_value-pipe-1
          - SECURE_ENV2: test_value-pipe-2
      #runtime: onHost-pipe
      
      - name: build-test
        type: bash
        setup:
          runtime:
            type: image
            image:
             custom:
               name: drydock/u16all
               tag: master
        triggeredBy:
          resources:
            - sample_scriptrepo
        execution:
          onExecute:
            - pushd $res_app_resourcePath/gitRepo
            - docker build -t sample_scriptrepo:latest .

      - name: test2
        type: bash
        setup:
          runtime:
            type: image
            image:
             custom:
               name: drydock/u16all
               tag: master
        triggeredBy:
          steps:
            - build-test
        execution:
          onExecute:
            - docker run --name "test_app" app:latest bash -c "pwd"
            - docker rm -fv "test_app"

      - name: push-test3
        type: bash
        setup:
          runtime:
            type: image
            image:
             custom:
               name: drydock/u16all
               tag: master
        requires:
          integrations:
            - artifactory
        triggeredBy:
          steps:
            - test2
        execution:
          onExecute:
            - docker login -u $int_art_username -p $int_art_password $int_art_url
            - artIp=$(echo $int_art_url | awk -F[/:] '{print $4}')
            - artPort=$(echo $int_art_url | awk -F[/:] '{print $5}')
            - echo "$artIp:$artPort"
            - docker tag app:latest $artIp:$artPort/demo/app:$STEP_ID
            - docker push $artIp:$artPort/demo/app:$STEP_ID

      - name: job2
        type: bash
        setup:
          runtime:
            type: image
            image:
             custom:
               name: drydock/u16all
               tag: master

        triggeredBy:
          steps:
            - build-test
        execution:
          onExecute:
            - echo "job2...."
