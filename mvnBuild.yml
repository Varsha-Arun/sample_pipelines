resources:
  - name: mvnBuild_info
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_artifactory
      buildName: mvn_sample_build
      buildNumber: 1
      
  - name: mvn_repo
    type: GitRepo
    configuration:
      gitProvider: varsha_github
      path: Varsha-Arun/project-examples
 
pipelines:
  - name: varshamvn
    steps:
      - name: mvnBuild_sample
        type: MvnBuild
        configuration:
          nodePool: varsha_u16
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install -f ./pom.xml
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: mvn_repo
          integrations:
            - name: varsha_artifactory
            - name: varsha_slack
#           runtime:            
#             type: image
#             image:
#               custom:
#                 name: drydock/u16java
#                 tag: master
        execution:
          onStart:
           - apt install default-jdk
            - pushd /tmp
            - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
            - tar xzvf apache-maven-3.6.1-bin.tar.gz
            - export PATH=$PATH:/tmp/apache-maven-3.6.1/bin
            - export M2_HOME=/tmp/apache-maven-3.6.1/
            - popd
            - javac -version
            - mvn --version
          onSuccess:
            - send_notifications varsha_slack
            
      - name: mvnBuild_publish
        type: PublishBuildInfo
        configuration:
          nodePool: varsha_u16
          integrations:
            - name: varsha_slack
          inputSteps:
            - name: mvnBuild_sample
          outputResources:
            - name: mvnBuild_info
        execution:
          onSuccess:
            - send_notifications varsha_slack
      
#       - name: promote_build_go
#         type: PromoteBuild
#         configuration:
#           targetRepo: promoted_go_test
#           integrations:
#             - name: kermit_art
#           inputSteps:
#             - name: publish_build_info
#           outputResources:
#             - name: promoted_go_build_info_go_publish

#       - name: bundle_go_publish
#         type: CreateReleaseBundle
#         configuration:
#           dryRun: false
#           description: "This is to test GoPublish -> PublishBuildInfo -> Promote -> CreateRelease -> Sign -> Distribute pipeline chain"
#           releaseBundleName: go_publish_test_build
#           releaseBundleVersion: v1.2
#           sign: false
#           inputResources:
#             - name: promoted_go_build_info_go_publish
#           integrations:
#             - name: kermit_art
#           outputResources:
#             - name: unsigned_release_bundle_go_publish

#       - name: sign_release_bundle_go_publish
#         type: SignReleaseBundle
#         configuration:
#           inputResources:
#             - name: unsigned_release_bundle_go_publish
#           integrations:
#             - name: kermit_art
#           outputResources:
#             - name: signed_release_bundle_go_publish

#       - name: distribute_signed_release_bundle
#         type: DistributeReleaseBundle
#         configuration:
#           dryRun: false
#           inputResources:
#             - name: signed_release_bundle_go_publish
#             - name: distribution_rule_go_publish
#           integrations:
#             - name: kermit_art
