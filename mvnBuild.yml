resources:
  - name: mavenBuild_info
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_art
      buildName: mvn_sample_build
      buildNumber: 1
      
  - name: maven_repo
    type: GitRepo
    configuration:
      gitProvider: varsha_github
      path: Varsha-Arun/project-examples

#   - name: script_gitrepo
#     type: GitRepo
#     configuration:
#       gitProvider: varsha_github
#       path: Varsha-Arun/script_repo
      
  - name: mavenBuild_infopromoted
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_art
      buildName: maven_promote_build_varsha
      buildNumber: 3
      
pipelines:
  - name: varshamaven
    steps:
      - name: mavenBuild_sample
        type: MvnBuild
        configuration:
          affinityGroup: mavenbuild
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install -f ./pom.xml
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: maven_repo
           # - name: script_gitrepo
          integrations:
            - name: varsha_art
            - name: varsha_slack
          runtime:            
            type: image
            image:
              auto:
                language: java
                versions:
                  - openjdk11
#               custom:
#                 name: drydock/u16java
#                 tag: master
        execution:
          onStart:
           # - apt install default-jdk
           # - pushd /tmp
           # - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
           # - tar xzvf apache-maven-3.6.1-bin.tar.gz
           # - export PATH=$PATH:/tmp/apache-maven-3.6.1/bin
           # - export M2_HOME=/tmp/apache-maven-3.6.1/
           # - popd
            - javac -version
            - mvn --version
          onSuccess:
            - send_notifications varsha_slack
            
      - name: mavenBuild_publish
        type: PublishBuildInfo
        configuration:
          affinityGroup: mavenbuild
          integrations:
            - name: varsha_slack
          inputSteps:
            - name: mavenBuild_sample
          outputResources:
            - name: mavenBuild_info
        execution:
          onSuccess:
            - send_notifications varsha_slack
      
      - name: maven_build_promoted
        type: PromoteBuild
        configuration:
          affinityGroup: mavenbuild
          targetRepository: test-maven-local # required 
          includeDependencies: true    # default false
          status: "promote_success" # for mvn_build_promoted" # optional
          comment: "maven build" # for mvn_build_promoted" # optional
          copy: true #optional - no need to have delete access it wont delete from base repo just moves copy to target repo
          inputResources:
            - name: mavenBuild_info #required
          outputResources:
            - name: mavenBuild_infopromoted #required

#       - name: bundle_go_publish
#         type: CreateReleaseBundle
#         configuration:
#           dryRun: false
#           description: "This is to test GoPublish -> PublishBuildInfo -> Promote -> CreateRelease -> Sign -> Distribute pipeline chain"
#           releaseBundleName: go_publish_test_build
#           releaseBundleVersion: v1.2
#           sign: false
#           inputResources:
#             - name: promoted_go_build_info_go_publish
#           integrations:
#             - name: kermit_art
#           outputResources:
#             - name: unsigned_release_bundle_go_publish
#
#       - name: sign_release_bundle_go_publish
#         type: SignReleaseBundle
#         configuration:
#           inputResources:
#             - name: unsigned_release_bundle_go_publish
#           integrations:
#             - name: kermit_art
#           outputResources:
#             - name: signed_release_bundle_go_publish
#
#       - name: distribute_signed_release_bundle
#         type: DistributeReleaseBundle
#         configuration:
#           dryRun: false
#           inputResources:
#             - name: signed_release_bundle_go_publish
#             - name: distribution_rule_go_publish
#           integrations:
#             - name: kermit_art
